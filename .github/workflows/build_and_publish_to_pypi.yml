name: Build and Publish to PyPI

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build-wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.16.2

      - name: Build wheels
        env:
          CIBW_BUILD: "cp311-* cp312-*"
          CIBW_SKIP: "*-win32 *-manylinux_i686 *-musllinux_i686"
          CIBW_ARCHS_LINUX: x86_64 aarch64
          CIBW_ARCHS_MACOS: x86_64 arm64
          CIBW_ARCHS_WINDOWS: AMD64

          # Build-time prerequisites for your Cython extensions
          CIBW_BEFORE_BUILD: pip install "numpy>=2" cython

          # Install your wheel with the full extra during tests
          CIBW_TEST_EXTRAS: "full"

          # Copy tests into the temp CWD so imports come from the installed wheel
          CIBW_TEST_COMMAND_LINUX: bash -lc 'cp -r {project}/tests . && pytest tests --tb=short'
          CIBW_TEST_COMMAND_MACOS: bash -lc 'cp -r {project}/tests . && pytest tests --tb=short'
          CIBW_TEST_COMMAND_WINDOWS: powershell -Command "Copy-Item -Recurse -Force {project}\tests .; python -m pytest tests --tb=short"

          CIBW_BUILD_VERBOSITY: 1

          # Optional: enable OpenMP on macOS (if libomp is installed)
          # CIBW_BEFORE_BUILD_MACOS: brew install libomp && pip install "numpy>=2" cython
          # CIBW_ENVIRONMENT_MACOS: ENABLE_OPENMP=1

        run: python -m cibuildwheel --output-dir wheelhouse

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl

  build-sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build "numpy>=2" cython

      - name: Build source distribution
        run: python -m build --sdist

      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: cibw-sdist
          path: dist/*.tar.gz

  test-wheels:
    name: Test wheels
    needs: [build-wheels, build-sdist]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.11", "3.12"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Download wheels
        uses: actions/download-artifact@v4
        with:
          pattern: cibw-wheels-*
          merge-multiple: true
          path: wheelhouse/

      - name: Install wheel (with full extra)
        run: |
          python -m pip install --upgrade pip
          python -m pip install --find-links wheelhouse/ "pyorps[full]" --force-reinstall

      - name: Quick import test
        run: |
          python -c "import pyorps; import pyorps.utils.path_algorithms; print('Imported pyorps and extension OK')"

  publish:
    name: Publish to PyPI
    needs: [build-wheels, build-sdist, test-wheels]
    runs-on: ubuntu-latest
    environment: pypi
    permissions:
      id-token: write

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: cibw-*
          merge-multiple: true
          path: dist/

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
